/* stylelint-disable at-rule-no-unknown */
/* stylelint-disable declaration-block-no-duplicate-properties */
/* The file intentionally uses Tailwind directives and @apply which are not standard CSS rules */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 10%;

    --card: 0 0% 98%;
    --card-foreground: 240 10% 10%;

    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 10%;

    --primary: 262 83% 58%;
    --primary-foreground: 0 0% 100%;

    --secondary: 195 100% 65%;
    --secondary-foreground: 240 10% 10%;

    --muted: 240 5% 96%;
    --muted-foreground: 240 4% 46%;

    --accent: 280 90% 65%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;

    --border: 240 6% 90%;
    --input: 240 6% 90%;
    --ring: 262 83% 58%;

    --radius: 0.75rem;

    /* Gradient tokens */
    --gradient-primary: linear-gradient(135deg, hsl(262 83% 58%) 0%, hsl(220 90% 56%) 100%);
    --gradient-secondary: linear-gradient(135deg, hsl(195 100% 65%) 0%, hsl(262 83% 58%) 100%);
    --gradient-accent: linear-gradient(135deg, hsl(280 90% 65%) 0%, hsl(195 100% 65%) 100%);
    --gradient-dark: linear-gradient(180deg, hsl(240 10% 10%) 0%, hsl(262 52% 20%) 100%);

    /* Shadows */
    --shadow-glow: 0 0 40px hsla(262, 83%, 58%, 0.3);
    --shadow-card: 0 8px 30px hsla(240, 10%, 10%, 0.08);

    /* Transitions */
    --transition-smooth: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    /* Indian tricolor palette (H S% L%) */
    --tricolor-saffron: 31 100% 58%;
    /* saffron ~ #FF9933 */
    --tricolor-white: 0 0% 100%;
    --tricolor-green: 134 78% 23%;
    /* green ~ #138808 */
    --tricolor-navy: 210 88% 12%;
    /* navy blue */
    --tricolor-violet: 262 83% 58%;
    /* violet (keeps using primary) */

    /* Tricolor gradients */
    --gradient-tricolor-swipe: linear-gradient(90deg, hsl(var(--tricolor-saffron)) 0%, hsl(var(--tricolor-white)) 50%, hsl(var(--tricolor-green)) 100%);
  }

  .dark {
    --background: 240 10% 8%;
    --foreground: 0 0% 98%;

    --card: 240 10% 12%;
    --card-foreground: 0 0% 98%;

    --popover: 240 10% 10%;
    --popover-foreground: 0 0% 98%;

    --primary: 262 83% 58%;
    --primary-foreground: 0 0% 100%;

    --secondary: 195 100% 65%;
    --secondary-foreground: 240 10% 10%;

    --muted: 240 8% 20%;
    --muted-foreground: 240 5% 65%;

    --accent: 280 90% 65%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;

    --border: 240 8% 20%;
    --input: 240 8% 20%;
    --ring: 262 83% 58%;

    /* Gradient tokens */
    --gradient-primary: linear-gradient(135deg, hsl(262 83% 58%) 0%, hsl(220 90% 56%) 100%);
    --gradient-secondary: linear-gradient(135deg, hsl(195 100% 65%) 0%, hsl(262 83% 58%) 100%);
    --gradient-accent: linear-gradient(135deg, hsl(280 90% 65%) 0%, hsl(195 100% 65%) 100%);
    --gradient-dark: linear-gradient(180deg, hsl(240 10% 8%) 0%, hsl(262 52% 20%) 100%);

    /* Shadows */
    --shadow-glow: 0 0 60px hsla(262, 83%, 58%, 0.5);
    --shadow-card: 0 8px 30px hsla(0, 0%, 0%, 0.4);

    /* Transitions */
    --transition-smooth: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }
}

@layer utilities {

  /* faster mandala rotation variant for the About section */
  .mandala-rotate-fast::before {
    animation-duration: 36s;
  }

  /* About section: animated background blobs and fun animations */
  @keyframes blob-move {
    0% {
      transform: translate3d(0, 0, 0) scale(1);
    }

    25% {
      transform: translate3d(20px, -10px, 0) scale(1.08);
    }

    50% {
      transform: translate3d(-10px, 18px, 0) scale(0.95);
    }

    75% {
      transform: translate3d(10px, 6px, 0) scale(1.02);
    }

    100% {
      transform: translate3d(0, 0, 0) scale(1);
    }
  }

  @keyframes wobble {
    0% {
      transform: rotate(0deg);
    }

    25% {
      transform: rotate(-4deg) translateY(-2px);
    }

    50% {
      transform: rotate(2deg) translateY(1px);
    }

    75% {
      transform: rotate(-2deg) translateY(-1px);
    }

    100% {
      transform: rotate(0deg);
    }
  }

  @keyframes float-slow {
    0% {
      transform: translateY(0);
    }

    50% {
      transform: translateY(-8px);
    }

    100% {
      transform: translateY(0);
    }
  }

  .about-crazy {
    position: relative;
    overflow: hidden;
  }

  .about-blobs {
    position: absolute;
    inset: 0;
    pointer-events: none;
    z-index: 0;
  }

  .about-blobs .blob {
    position: absolute;
    border-radius: 9999px;
    filter: blur(40px);
    opacity: 0.6;
    mix-blend-mode: screen;
    transform: translateZ(0);
  }

  .about-blobs .blob-1 {
    width: 420px;
    height: 420px;
    left: -80px;
    top: -80px;
    background: radial-gradient(circle at 30% 30%, rgba(99, 102, 241, 0.95), rgba(99, 102, 241, 0.18));
    animation: blob-move 12s ease-in-out infinite;
  }

  .about-blobs .blob-2 {
    width: 320px;
    height: 320px;
    right: -70px;
    top: 40px;
    background: radial-gradient(circle at 70% 30%, rgba(168, 85, 247, 0.9), rgba(168, 85, 247, 0.12));
    animation: blob-move 14s ease-in-out infinite reverse;
  }

  .about-blobs .blob-3 {
    width: 240px;
    height: 240px;
    left: 40%;
    bottom: -60px;
    background: radial-gradient(circle at 40% 40%, rgba(34, 197, 94, 0.85), rgba(34, 197, 94, 0.08));
    animation: blob-move 18s ease-in-out infinite;
  }

  .profile-wobble {
    display: inline-block;
    animation: wobble 4.8s ease-in-out infinite;
    transform-origin: 50% 50%;
  }

  .skill-badge {
    display: inline-block;
    transition: transform .35s ease, box-shadow .35s ease;
    animation: float-slow 6s ease-in-out infinite;
  }

  .skill-badge:hover {
    transform: translateY(-6px) scale(1.06) rotate(-1deg);
    box-shadow: 0 8px 30px rgba(99, 102, 241, 0.08);
  }

  /* subtle hue shift for heading to make it feel alive */
  @keyframes hue-shift {
    0% {
      filter: hue-rotate(0deg);
    }

    50% {
      filter: hue-rotate(12deg);
    }

    100% {
      filter: hue-rotate(0deg);
    }
  }

  .heading-hue {
    display: inline-block;
    animation: hue-shift 10s linear infinite;
  }

  /* small set of animation-delay helpers to avoid inline styles */
  .anim-delay-0 {
    animation-delay: 0s;
  }

  .anim-delay-50 {
    animation-delay: 0.05s;
  }

  .anim-delay-100 {
    animation-delay: 0.1s;
  }

  .anim-delay-150 {
    animation-delay: 0.15s;
  }

  .anim-delay-200 {
    animation-delay: 0.2s;
  }

  .anim-delay-250 {
    animation-delay: 0.25s;
  }

  .anim-delay-300 {
    animation-delay: 0.3s;
  }

  .anim-delay-350 {
    animation-delay: 0.35s;
  }

  .anim-delay-400 {
    animation-delay: 0.4s;
  }

  .anim-delay-450 {
    animation-delay: 0.45s;
  }

  .anim-delay-500 {
    animation-delay: 0.5s;
  }

  .anim-delay-600 {
    animation-delay: 0.6s;
  }

  .anim-delay-1000 {
    animation-delay: 1s;
  }
}

/* Mobile-friendly overrides */
@media (max-width: 640px) {

  /* Reduce decorative blob sizes to avoid overflow */
  .about-blobs .blob-1 {
    width: 220px;
    height: 220px;
    left: -40px;
    top: -40px;
  }

  .about-blobs .blob-2 {
    width: 180px;
    height: 180px;
    right: -30px;
    top: 20px;
  }

  .about-blobs .blob-3 {
    width: 140px;
    height: 140px;
    left: 45%;
    bottom: -30px;
  }

  /* Make container padding friendlier on small screens */
  .container {
    padding-left: 1rem;
    padding-right: 1rem;
  }

  /* Scale down hero text and spacing */
  h1 {
    font-size: 1.75rem;
  }

  h2 {
    font-size: 1.25rem;
  }

  /* Avatar should shrink and remain crisp */
  .avatar-glow img {
    width: 6.5rem;
    height: 6.5rem;
  }

  /* Make buttons and inputs more tappable */
  .btn,
  button,
  .button,
  .input,
  input,
  textarea {
    min-height: 44px;
  }

  /* Stack grid columns into single column for narrow screens */
  .grid.md\:grid-cols-2 {
    grid-template-columns: 1fr !important;
  }

  /* Reduce card paddings for small screens */
  .p-6 {
    padding: 1rem !important;
  }

  /* Progress bars: ensure they fit */
  .progress-fill {
    height: 0.75rem !important;
  }
}

@layer base {
  * {
    border-color: hsl(var(--border));
  }

  body {
    background: hsl(var(--background));
    color: hsl(var(--foreground));
    font-family: 'Inter', sans-serif;
  }

  html {
    scroll-behavior: smooth;
  }

  /* Prevent horizontal overflow introduced by large decorative elements */
  html,
  body {
    overflow-x: hidden;
  }

  /* Visually hide scrollbars but preserve scrolling behavior */
  body {
    -ms-overflow-style: none;
    /* IE and Edge */
    /* intentionally omitted 'scrollbar-width' for broader browser compatibility */
    /* Firefox */
  }

  body::-webkit-scrollbar {
    width: 0;
    height: 0;
    display: none;
  }
}

@layer utilities {
  .gradient-primary {
    background: var(--gradient-primary);
  }

  .gradient-secondary {
    background: var(--gradient-secondary);
  }

  .gradient-accent {
    background: var(--gradient-accent);
  }

  .gradient-dark {
    background: var(--gradient-dark);
  }

  .text-gradient {
    background: var(--gradient-primary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  /* Tricolor text gradient: saffron -> white -> green (use for headings/accents) */
  .text-tricolor {
    background: var(--gradient-tricolor-swipe);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  /* Blue -> Violet heading gradient for primary section headings requested by user */
  :root {
    --blueviolet-start: 215 100% 50%;
    /* blue */
    --blueviolet-end: 262 83% 58%;
    /* violet */
  }

  .text-blueviolet {
    background: linear-gradient(90deg, hsl(var(--blueviolet-start)), hsl(var(--blueviolet-end)));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  /* Make primary theme violet-forward: ensure gradients and shadows reflect violet palette */
  .theme-violet {
    --primary: 262 85% 55%;
    --gradient-primary: linear-gradient(135deg, hsl(262 85% 55%) 0%, hsl(280 85% 48%) 100%);
    --shadow-glow: 0 0 48px hsla(262, 85%, 55%, 0.22);
  }

  .shadow-glow {
    box-shadow: var(--shadow-glow);
  }

  .shadow-card {
    box-shadow: var(--shadow-card);
  }

  .transition-smooth {
    transition: var(--transition-smooth);
  }

  /* navigation underline animation */
  .nav-underline {
    position: relative;
  }

  .nav-underline::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    bottom: -6px;
    height: 2px;
    background: linear-gradient(90deg, hsl(var(--tricolor-saffron)), hsl(var(--tricolor-green)));
    transform: scaleX(0);
    transform-origin: left center;
    transition: transform 220ms cubic-bezier(0.2, 0, 0, 1);
    opacity: 0.95;
    border-radius: 2px;
  }

  .nav-underline:hover::after,
  .nav-underline:focus::after {
    transform: scaleX(1);
  }

  /* Glassmorphism utility with subtle mandala overlay */
  .glass {
    position: relative;
    background: hsl(var(--card) / 0.55);
    -webkit-backdrop-filter: blur(10px) saturate(120%);
    backdrop-filter: blur(10px) saturate(120%);
    border: 1px solid hsl(var(--border) / 0.12);
    box-shadow: var(--shadow-card);
    border-radius: var(--radius);
    overflow: hidden;
  }

  .glass::before {
    /* subtle mandala SVG overlay (very low opacity) */
    content: '';
    position: absolute;
    inset: 0;
    pointer-events: none;
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 200 200'><g fill='none' stroke='%23ffffff' stroke-opacity='0.06' stroke-width='1'><circle cx='100' cy='100' r='60'/><circle cx='100' cy='100' r='80'/><g transform='translate(100,100)'><g stroke='%23ffffff' stroke-opacity='0.04'><path d='M60 0 A60 60 0 0 1 54 35'/><path d='M0 60 A60 60 0 0 1 -35 54'/></g></g></g></svg>");
    background-repeat: no-repeat;
    background-position: center;
    background-size: 180px 180px;
    opacity: 0.06;
    mix-blend-mode: overlay;
    transform: translateZ(0);
  }

  /* darker subtle mandala when in dark mode */
  .dark .glass::before {
    filter: brightness(0.9) contrast(1.05) hue-rotate(-10deg);
    opacity: 0.08;
  }

  /* Tricolor glow utility (saffron -> white -> green) */
  .tricolor-glow {
    position: relative;
    overflow: visible;
  }

  .tricolor-glow::after {
    content: '';
    position: absolute;
    inset: -10px;
    border-radius: inherit;
    pointer-events: none;
    background: radial-gradient(circle at 10% 20%, rgba(255, 153, 51, 0.18), transparent 20%),
      radial-gradient(circle at 50% 50%, rgba(255, 255, 255, 0.12), transparent 25%),
      radial-gradient(circle at 80% 80%, rgba(19, 136, 8, 0.16), transparent 22%);
    filter: blur(14px);
    opacity: 0;
    transition: opacity .28s ease, transform .28s ease;
    transform: translateZ(0) scale(0.98);
  }

  .tricolor-glow:hover::after,
  .tricolor-glow:focus::after {
    opacity: 1;
    transform: translateZ(0) scale(1);
  }

  /* Tricolor divider top utility (for header/footer section dividers) */
  .tricolor-divider-top {
    position: relative;
    overflow: visible;
  }

  .tricolor-divider-top::before {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    height: 1px;
    background: linear-gradient(90deg, hsl(var(--tricolor-saffron)), hsl(var(--tricolor-white)), hsl(var(--tricolor-green)));
    pointer-events: none;
    z-index: 10;
  }

  /* Simple straight divider line for sections (subtle) */
  .section-divider-top {
    position: relative;
    overflow: visible;
    /* distance from the top of the section to the divider line; components can override this variable */
    --section-divider-offset: 1rem;
    /* default: 16px */
  }

  .section-divider-top::before {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    /* place the divider at a small offset from the top so headings/content keep consistent distance */
    top: var(--section-divider-offset);
    height: 1px;
    background: linear-gradient(90deg, hsl(var(--blueviolet-start)), hsl(var(--blueviolet-end)));
    pointer-events: none;
    z-index: 10;
  }

  /* Helper classes to control the vertical offset of the section divider without inline styles */
  .section-divider-offset-sm {
    --section-divider-offset: 0.5rem;
  }

  .section-divider-offset {
    --section-divider-offset: 1rem;
  }

  .section-divider-offset-md {
    --section-divider-offset: 1.25rem;
  }

  .section-divider-offset-lg {
    --section-divider-offset: 1.75rem;
  }

  /* Tricolor left border for callouts / blockquotes */
  .tricolor-border-left {
    position: relative;
    padding-left: 1rem;
    border-left: 4px solid transparent;
  }

  .tricolor-border-left::before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 4px;
    background: linear-gradient(180deg, hsl(var(--tricolor-saffron)), hsl(var(--tricolor-white)), hsl(var(--tricolor-green)));
    border-radius: 2px;
    pointer-events: none;
  }

  /* Tricolor outline for card outlines (use sparingly) */
  .tricolor-outline {
    border: 2px solid transparent;
    border-image: linear-gradient(90deg, hsl(var(--tricolor-saffron)), hsl(var(--tricolor-white)), hsl(var(--tricolor-green))) 1;
    border-radius: var(--radius);
  }

  /* subtle pulse for icons / badges */
  @keyframes glow-pulse {
    0% {
      box-shadow: 0 0 0 rgba(255, 153, 51, 0.06);
    }

    50% {
      box-shadow: 0 6px 30px rgba(99, 102, 241, 0.10);
    }

    100% {
      box-shadow: 0 0 0 rgba(19, 136, 8, 0.04);
    }
  }

  .glow-pulse {
    animation: glow-pulse 3.5s ease-in-out infinite;
  }

  /* Mandala rotation utility (apply .mandala-rotate to container holding .glass::before) */
  @keyframes mandala-rotate {
    from {
      transform: rotate(0deg);
    }

    to {
      transform: rotate(360deg);
    }
  }

  .mandala-rotate::before {
    animation: mandala-rotate 80s linear infinite;
    transform-origin: 50% 50%;
  }

  /* Typewriter effect utilities */
  @keyframes typing {
    from {
      width: 0;
    }

    to {
      width: 100%;
    }
  }

  @keyframes blink-caret {

    0%,
    100% {
      border-color: transparent;
    }

    50% {
      border-color: hsl(var(--primary) / 1);
    }
  }

  .typewriter {
    display: inline-block;
    overflow: hidden;
    white-space: nowrap;
    border-right: .12em solid transparent;
    animation: typing 3s steps(30, end) 1s forwards, blink-caret .7s step-end infinite;
    max-width: 100%;
  }

  /* Avatar glow and ring */
  .avatar-glow {
    position: relative;
    border-radius: 9999px;
    overflow: visible;
  }

  .avatar-glow::after {
    content: '';
    position: absolute;

    inset: -6px;
    border-radius: inherit;
    filter: blur(10px);
    background: radial-gradient(circle at 30% 30%, rgba(99, 102, 241, 0.12), transparent 25%), radial-gradient(circle at 70% 70%, rgba(168, 85, 247, 0.08), transparent 25%);
    opacity: 0.95;
    transition: transform .36s ease, opacity .36s ease;
    transform: scale(.98);
    pointer-events: none;
  }

  .avatar-glow:hover::after {
    transform: scale(1.03);
    opacity: 1;
  }

  /* subtle pulse animation for avatar (2s interval) */
  @keyframes avatar-pulse {
    0% {
      transform: scale(1);
    }

    50% {
      transform: scale(1.03);
    }

    100% {
      transform: scale(1);
    }
  }

  .avatar-pulse {
    animation: avatar-pulse 2s ease-in-out infinite;
    transform-origin: 50% 50%;
    will-change: transform;
  }

  /* Floating skill badges around about card */
  .floating-badge {
    position: absolute;
    padding: .4rem .6rem;
    border-radius: 9999px;
    font-size: .75rem;
    background: hsl(0 0% 100% / 0.06);
    color: inherit;
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.06);
    transform-origin: center;
    animation: float-slow 6s ease-in-out infinite;
  }

  /* Animated progress fill (subtle width transition) */
  .progress-fill {
    transition: width .8s cubic-bezier(.2, .9, .2, 1);
  }

  /* Reduce motion for users who prefer it */
  @media (prefers-reduced-motion: reduce) {

    .glow-pulse,
    .mandala-rotate::before,
    .typewriter,
    .tricolor-glow::after {
      animation: none !important;
      transition: none !important;
    }
  }
}

/* =========================
   Futuristic Splash Styles
   Scoped and lightweight. Keeps animations CSS-first and respects
   prefers-reduced-motion. Used by src/components/Splash.tsx
   ========================= */

@layer utilities {
  .splash {
    position: fixed;
    inset: 0;
    z-index: 9999;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    -webkit-tap-highlight-color: transparent;
  }

  .splash__bg {
    position: absolute;
    inset: 0;
    background: linear-gradient(180deg, #0D0D0D 0%, #1A1A2E 50%, #2C2C54 100%);
    pointer-events: none;
    will-change: transform, opacity;
  }

  .splash__grid {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    opacity: 0.7;
    mix-blend-mode: overlay;
    pointer-events: none;
    transform: translateZ(0);
  }

  .splash__center {
    position: relative;
    width: min(44vw, 420px);
    height: min(44vw, 420px);
    display: grid;
    place-items: center;
    gap: 1rem;
    z-index: 10;
  }

  .splash__ring {
    width: 60%;
    height: 60%;
    border-radius: 9999px;
    display: grid;
    place-items: center;
    position: relative;
    filter: drop-shadow(0 12px 40px rgba(99, 102, 241, 0.16));
    background: conic-gradient(from 0deg, rgba(0, 255, 255, 0.06), rgba(168, 85, 247, 0.06), rgba(255, 80, 180, 0.06));
    --ring-border: 6px;
  }

  .splash__ring::after {
    content: '';
    position: absolute;
    inset: calc(var(--ring-border) * -1px);
    border-radius: 9999px;
    padding: 6px;
    background: conic-gradient(90deg, #00FFFF, #8A2BE2, #FF69B4, #00FFFF);
    filter: blur(10px) saturate(140%);
    opacity: .95;
    transform: scale(1.02);
    animation: ring-rotate 3.6s linear infinite;
    pointer-events: none;
  }

  @keyframes ring-rotate {
    from {
      transform: scale(1.02) rotate(0deg);
    }

    to {
      transform: scale(1.02) rotate(360deg);
    }
  }

  .splash__shape {
    width: 52%;
    height: 52%;
    border-radius: 18% 32% 28% 22% / 30% 25% 35% 40%;
    background: radial-gradient(circle at 20% 20%, rgba(0, 255, 255, 0.95), transparent 25%), linear-gradient(135deg, rgba(0, 255, 255, 0.12), rgba(138, 43, 226, 0.12));
    position: relative;
    transform: translateZ(0);
    animation: shape-morph 3.5s cubic-bezier(.2, .9, .2, 1) infinite;
    box-shadow: 0 8px 40px rgba(138, 43, 226, 0.18), 0 0 80px rgba(255, 105, 180, 0.06) inset;
  }

  @keyframes shape-morph {
    0% {
      border-radius: 18% 32% 28% 22% / 30% 25% 35% 40%;
      filter: drop-shadow(0 24px 60px rgba(0, 255, 255, 0.06));
      transform: scale(1);
    }

    33% {
      border-radius: 32% 18% 40% 20% / 20% 40% 22% 30%;
      filter: drop-shadow(0 30px 70px rgba(138, 43, 226, 0.08));
      transform: scale(1.06) rotate(6deg);
    }

    66% {
      border-radius: 22% 42% 20% 34% / 40% 22% 30% 25%;
      filter: drop-shadow(0 18px 48px rgba(255, 105, 180, 0.06));
      transform: scale(.98) rotate(-6deg);
    }

    100% {
      border-radius: 18% 32% 28% 22% / 30% 25% 35% 40%;
      transform: scale(1);
    }
  }

  .splash__percent {
    position: absolute;
    bottom: 12%;
    left: 50%;
    transform: translateX(-50%);
    font-weight: 700;
    color: white;
    font-size: clamp(1rem, 2.8vw, 1.25rem);
    text-shadow: 0 6px 20px rgba(138, 43, 226, 0.22);
  }

  .splash__text {
    position: absolute;
    top: 74%;
    left: 50%;
    transform: translateX(-50%);
    color: rgba(255, 255, 255, 0.9);
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, 'Roboto Mono', 'Courier New', monospace;
    letter-spacing: 0.02em;
    text-shadow: 0 8px 30px rgba(0, 0, 0, 0.6);
    font-size: 0.92rem;
  }

  /* small neon particles that drift — used for the explode transition */
  .splash__particles {
    position: absolute;
    inset: 0;
    pointer-events: none;
    z-index: 8;
  }

  .splash__particle {
    --size: calc(4px + (var(--i) * 0.3px));
    position: absolute;
    left: 50%;
    top: 50%;
    width: var(--size);
    height: var(--size);
    background: radial-gradient(circle, rgba(0, 255, 255, 0.98), rgba(138, 43, 226, 0.85));
    border-radius: 50%;
    transform-origin: center;
    opacity: 0;
    will-change: transform, opacity;
    transition: opacity .5s ease;
  }

  /* explode animation triggered by .splash--exploding */
  .splash--exploding .splash__particle {
    animation: explode 0.75s cubic-bezier(.2, .9, .2, 1) forwards;
  }

  @keyframes explode {
    0% {
      opacity: 1;
      transform: translate(-50%, -50%) scale(1);
    }

    100% {
      opacity: 0;
      transform: translate(calc(-50% + var(--tx)), calc(-50% + var(--ty))) scale(0.6);
    }
  }

  /* create per-particle random offsets via inline style --tx and --ty set in JS via CSS custom properties */
  .splash--exploding .splash__particle {
    opacity: 1;
  }

  /* Typewriter fallback/control — already in file; ensure visible on splash */
  .splash .typewriter {
    border-right: .12em solid rgba(255, 255, 255, 0.12);
  }

  /* Respect reduced motion */
  @media (prefers-reduced-motion: reduce) {

    .splash__shape,
    .splash__ring::after {
      animation: none !important;
    }

    .splash__grid {
      opacity: 0.5;
    }
  }

  /* Small screens — simplify visuals */
  @media (max-width: 640px) {
    .splash__center {
      width: 72vw;
      height: 72vw;
    }

    .splash__ring::after {
      display: none;
    }

    .splash__grid {
      display: none;
    }
  }
}